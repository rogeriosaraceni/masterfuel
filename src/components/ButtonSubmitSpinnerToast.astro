---
interface Props {
    btnClass: string;
    dataToastTarget: string;
    title: string;
}

const { btnClass, dataToastTarget, title } = Astro.props;
---

<button type="submit" class={btnClass} data-btn="spinner" data-toast-target={dataToastTarget}>
    <span>{title}</span>
    <span class="btn-spinner spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
</button>

<style>
    .btn-spinner-disabled {
        opacity: 0.8 !important;
        pointer-events: none !important;
    }
</style>

<script is:inline>
    document.addEventListener('DOMContentLoaded', function () {
        const spinnerBtns = document.querySelectorAll('[data-btn="spinner"]');

        for (const btn of spinnerBtns) {
            btn.addEventListener('click', (event) => {
                const form = btn.closest('form');

                if (form.checkValidity()) {
                    event.preventDefault();
                    btn.classList.add('btn-spinner-disabled');
                    btn.querySelector('.btn-spinner').classList.remove('d-none');

                    // Pegar o valor do toastTarget
                    const toastTarget = btn.getAttribute('data-toast-target');

                    if (toastTarget) {
                        // Adicionar um campo oculto ao formulÃ¡rio com o valor do toastTarget
                        const toastTargetInput = document.createElement('input');
                        toastTargetInput.type = 'hidden';
                        toastTargetInput.name = 'toastTarget';
                        toastTargetInput.value = toastTarget;
                        form.appendChild(toastTargetInput);
                    }

                    setTimeout(() => {
                        btn.classList.remove('btn-spinner-disabled');
                        btn.querySelector('.btn-spinner').classList.add('d-none');
                        form.submit();
                    }, 1000);
                }
            });
        }
    });
</script>
